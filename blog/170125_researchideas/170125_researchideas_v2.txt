<p style="font-size:10px;"> ENTER DATE HERE </p>
<p style="font-size:15px;">\begin{center}</p>
<p style="font-size:15px;">\large <strong>GRST Notes: Research Ideas (January 25, 2017)</strong> </p>
<p style="font-size:15px;">\end{center}</p>
<p style="font-size:15px;">This week, Sam talked about some ideas he had about possible directions for research. In this post, all sheaves have values in $latex \textsf{Vect}$.</p>
<p style="font-size:20px;"> <strong>1   Random Sheaves</strong></p>
<p style="font-size:15px;">An interesting concept to consider is the notion of a random sheaf, and how to properly define one. We will discuss two dual methods for obtaining such a sheaf: a top-down method in which we begin at the highest dimensional cell, and work our way down in dimension; and a bottom-up method in which we start with 0- and 1- cells, and work our way up in dimension.</p>
<p style="font-size:18px;"> <strong>1.1   Top-Down Approach</strong></p>
<p style="font-size:15px;">We begin with Sam's algorithm to construct a random sheaf from the top-down. The aim is to define a sheaf on a fixed $latex n$-dimensional cell complex $latex X$ where the stalk (a vector space) over each cell is predetermined. We call such an object a <strong>Liorian</strong>. To demonstrate the algorithm, we will consider the following cell complex as an example.</p>
ENTER FIGURE HERE
<p style="font-size:15px;">We begin by defining maps out of the $latex (n-1)$-cells. Note that there are no maps out of the $latex n$-cells, since they are of the highest dimension. In the case of our example, we will be defining maps out of the $latex 1$-cells, denoted by the arrows in red. The maps are defined one cell at a time, so suppose we focus on the map out of the cell $latex z$.  But first, we need some terminology.</p>
<div style="border:2px;border-style:solid;border-color:#000000;padding:.7em;font-size:15px;margin-bottom:1em;"><strong> Definition 1</strong> Suppose $latex (P, \leq)$ is a pre-order. The <strong>open star</strong> of a point $latex x \in P$ is defined to be the set $latex U_x = \{y \in P \, | \, x \leq y\}$.</div>
<p style="font-size:15px;">The open star is simply the set of higher-dimensional cells of which the cell $latex x$ is a face. Viewing the cell complex $latex X$ as a poset, we take the open star of the cell $latex z$, along with all maps connecting these points. In this first step, the result is a simple diagram.</p>
ENTER COMMUTATIVE DIAGRAM HERE
<p style="font-size:15px;">Next, we remove $latex z$ along with all maps out of $latex z$ from the open star and we denote this the <strong>reduced open star</strong>. We then take the limit of the reduced open star. The reduced open star in this case is just a single point, so the limit $latex L_z$  will simply be the stalk over $latex T$, along with the identity map into $latex T$. The map from $latex z$ into $latex T$, denoted $latex \phi_{z,T}$ can be defined by choosing a random map, $latex \alpha_z$ from $latex z$ into $latex L_z$, as shown in the following diagram.</p>
ENTER COMMUTATIVE DIAGRAM HERE
<p style="font-size:15px;">Here, $latex \phi_{z,T} = \alpha_z$, so defining the map from $latex z$ into $latex T$ reduces to choosing a random map from the stalk of $latex z$ into the stalk of $latex T$. The same procedure can be done for maps out of $latex x$ and $latex y$. The reason for taking limits may not be clear in this initial step of the algorithm, but this will be essential in the later steps.</p>
ENTER FIGURE HERE
<p style="font-size:15px;">Now that all maps out of $latex (n-1)$-cells are determined, we move on to maps out of $latex (n-2)$-cells. In our example, these are the maps out of the $latex 0$-cells, which are shown in green. Let's start by considering the maps out of the cell $latex a$. Once again, we start off by taking the open star of $latex a$:</p>
ENTER COMMUTATIVE DIAGRAM HERE
<p style="font-size:15px;">Next, we remove $latex a$ and all maps out of $latex a$ to get the reduced open star and take the limit of the diagram. This gives us the limit $latex L_a$, and two maps $latex p_1 : L_a \rightarrow z$ and $latex p_2: L_a \rightarrow y$. We choose a random map $latex \alpha_a: a \rightarrow L_a$, and the green arrows are then defined by composition. Explicitly, we have $latex \phi_{a,z} = p_1 \circ \alpha_a$ and $latex \phi_{a,y} = p_2 \circ \alpha_a$.  This scenario can be seen in the following diagram.</p>
ENTER COMMUTATIVE DIAGRAM HERE
<p style="font-size:15px;">By choosing a random map into the limit, and defining the $latex \phi$ maps by composition,  we ensure that commutativity of the diagram holds. We then repeat this procedure for all other $latex 0$ cells, to obtain a consistent set of maps. Note that since $latex u$ is not the face of any other cell, defining maps into $latex u$ will be similar to how we defined maps into $latex T$. Namely, they will simply be a random choice of a map from the stalk of $latex c$ or $latex d$ into the stalk of $latex u$. </p>
<p style="font-size:15px;">This was a fairly simple example to complete, but the algorithm is similar for cell complexes with higher dimensional cells. We simply continue to iterate the procedure dimension-by-dimension until we reach the $latex 0$-cells, at which point we will have fully defined the sheaf. </p>
<p style="font-size:18px;"> <strong>1.2   Bottom-Up Approach</strong></p>
ENTER FIGURE HERE
<p style="font-size:15px;">Next, we discuss the dual bottom-up approach to building a random sheaf. The main difference will be the use of a colimit rather than a limit, and building up the maps into each cell dimension by dimension. Once again, we start with a Liorian: a cell complex $latex X$ where stalks over each cell are predetermined. We will use the same Liorian to demonstrate the procedure, and we start by defining maps into $latex 1$-cells, which are shown in green above. We begin by focusing on maps into $latex z$.</p>
<div style="border:2px;border-style:solid;border-color:#000000;padding:.7em;font-size:15px;margin-bottom:1em;"><strong> Definition 2</strong> Suppose $latex (P, \leq)$ is a pre-order. The <strong>closure</strong> of a point $latex x \in P$ is defined to be the set $latex V_x = \{y \in P \, | \, y \leq x\}$.</div>
<p style="font-size:15px;">Here, we are simply taking all lower dimensional cells that are faces of the given cell $latex z$. We take the closure of the cell $latex z$, along with all maps between the points in the closure. Similar to the reduced open star, we remove $latex z$ along with all maps into $latex z$ and denote this the <strong>reduced closure</strong> of $latex z$. We take the colimit of the resulting diagram, to obtain the colimit $latex L_z$ along with maps $latex q_1: a  \rightarrow L_z$ and $latex q_2: b\rightarrow L_z$. We choose a random map $latex \alpha_z: L_z \rightarrow z$ and define the maps into $latex z$, $latex \phi_{a,z}$ and $latex \phi_{b,z}$ to be the composition as shown in the diagram below.</p>
ENTER COMMUTATIVE DIAGRAM HERE
<p style="font-size:15px;">It is clear that we can do this for all $latex 1$-cells, and then continue with higher dimensional cells until all maps are defined. </p>
<p style="font-size:18px;"> <strong>1.3   Extending Sheaves on Graphs</strong></p>
<p style="font-size:15px;">During the discussion about building random sheaves, Jakob suggested a way to modify the algorithm to extend a sheaf on a graph to a sheaf on its clique complex. Here, we begin with a sheaf on a graph $latex X_1$. This implies the stalks over all cells in the graph are chosen, and a consistent set of maps from $latex 0$ cells into $latex 1$ cells is also chosen. For this post, we will continue to use the following example, noting the $latex 2$-cell is not present.</p>
ENTER FIGURE HERE
<p style="font-size:15px;">Now, we consider the clique complex $latex X$ of the graph and we denote its $latex n$-skeleton by $latex X_n$. We will iteratively define the stalks and maps in the higher dimensional cells beginning with $latex X_2$. The $latex 2$-skeleton of the clique complex of the above graph is shown in the following figure.</p>
ENTER FIGURE HERE
<p style="font-size:15px;">During this step, we must define the stalks on all $latex 2$ cells and also all maps into $latex 2$-cells. In our example, we must define the stalks over $latex T$ and define the maps represented by the red arrows. This is done by following the procedure in the bottom-up approach. We define the stalk over $latex T$ to be the colimit of its reduced closure (denoted by $latex L_T$), and define the maps into $latex T$ (the red maps) to be the maps into the colimit.</p>
ENTER COMMUTATIVE DIAGRAM HERE
<p style="font-size:15px;">In the case of this example, we are done. However, if there were more $latex 2$-cells, we would simply repeat this procedure until we have a sheaf on $latex X_2$. Then, we continue this process for higher dimensional cells until we have a sheaf on $latex X$. </p>
<p style="font-size:15px;">Note that using this extension method, the sheaf on the graph was the only data we needed to predetermine. All other stalks and maps are well-defined using this colimit procedure. Thus, each sheaf on a graph will result in a unique sheaf on its clique complex with this algorithm. In contrast, when we define sheaves on a Liorian, we needed to choose a random map into each limit/colimit when defining maps into or out of cells. With this formulation, we can think about the space of all possible maps, and which collections of maps will ultimately result in a sheaf. We discuss this further in the next section.</p>
<p style="font-size:15px;">One interesting aspect of the graph extension approach is that we can build a random sheaf by defining a random graph. In other words, the randomness comes from a random cell complex rather than a choice of random maps. It would be interesting to study asymptotic properties of random sheaves built in this manner, since this is similar to how random graph theory was extended to random clique complexes in the work of Kahle ({\color{red} cite something}).</p>
<p style="font-size:20px;"> <strong>2   Moduli Spaces of Sheaves</strong></p>
<p style="font-size:15px;">As we hinted in the previous section, it would be interesting to understand all possible sheaves given a Liorian. There are two different viewpoints that we can take with this: an iterative viewpoint mimicing the iterative process to build the random sheaf, and a consolidated viewpoint which looks at entire procedure all at once. In this section, we will use the top-down approach, but the discussion can be reworded in the context of the bottom-up approach.</p>
<p style="font-size:18px;"> <strong>2.1   Iterative Viewpoint</strong></p>
ENTER FIGURE HERE
<p style="font-size:15px;">Consider the construction of the sheaf in the top-down approach, and we continue with the same cell complex as an example. For concreteness, suppose that the vector spaces over the cells $latex z$ and $latex T$ are $latex z =k^p$ and $latex T = k^q$, where $latex k$ is a field. Any map $latex \phi_{z,T} : k^p \rightarrow k^q$ can be represented as a matrix $latex (x_{i,j})_{1\leq i \leq p, 1 \leq j \leq q}$ of $latex pq$ variables, so we can think of any such matrix as being a point in $latex k^{pq}$. We obtain one matrix for each map we aim to define. The space of all matrices for maps coming out of $latex 1$-cells is $latex k^{N_1}$, where $latex N_1$ is the sum of the number of variables for each of these matrices.</p>
<p style="font-size:15px;">Note that at this first step, there are no restrictions on these maps, since no other maps have been defined yet and thus there are no commutativity relations to enforce. Once we choose a set of maps out of $latex 1$-cells (a point in $latex k^{N_1}$), we can move to lower dimensions. We can consider the space of all matrices for maps coming out of $latex 0$-cells, which we denote $latex k^{N_0}$, (where $latex N_0$ is the sum of the number of variables for all matrices out of $latex 0$-cells), but not every point in this space will result in a set of matrices that satisfy all commutativity relations. In fact, enforcing the commutativity of the diagrams will give us a collection of polynomial equations where the variables are elements of these matrices; we denote this collection of equations $latex \mathcal{P}_0$. Therefore, a consistent set of matrices that satisfies all the sheaf conditions is a point in $latex k^{N_0}$ that satisfies all polynomial equations in $latex \mathcal{P}_0$. In other words, it is a point on the variety $latex S_0 = V(\mathcal{P}_0)$ in $latex k^{N_0}$.</p>
<p style="font-size:15px;">It turns out that all polynomials in $latex \mathcal{P}_0$ are linear equations. Consider the maps $latex \phi_{a,y}$ and $latex \phi_{a,z}$ out of the $latex 0$-cell $latex a$. The commutativity relation this must satisfy is: $latex \phi_{z,T} \circ \phi_{a,z} - \phi_{y,T} \circ \phi_{a,y}  = 0$. Note that $latex \phi_{z,T}$ and $latex \phi_{y,T}$ are already well defined (since they are maps out of a higher dimensional cell), whereas $latex \phi_{a,z}$ and $latex \phi_{a,y}$ are to be determined, so they are matrices of variables. Additionally, since these are all matrices, composition is simply matrix multiplication. Thus, we obtain one linear equation for each component of the matrix.  </p>
<p style="font-size:15px;">In the case of the cell complex above, $latex S_0$ defines the space of all possible sheaves, since the construction is complete after defining maps out of the $latex 0$-cells. However, suppose that the maximum dimension in the cell complex is $latex n$. There are no commutativity relations for maps out of $latex (n-1)$-cells, so we are free to choose any point in $latex k^{N_{n-1}}$. The next step is to define the maps out of $latex (n-2)$-cells. By the argument above, the space of all possible maps out of $latex (n-2)$ cell is $latex k^{N_{n-2}}$, where $latex N_{n-2}$ is the number of variables for each of these matrices. We will get a collection of polynomials, $latex \mathcal{P}_{n-2}$, that these variables must satisfy, and the resulting variety is $latex S_{n-2} = V(\mathcal{P}_{n-2})$. After choosing a point in this variety, we continue this procedure until we reach the variety $latex \mathcal{S}_0$. Then, any point in $latex S_0$ will result in a sheaf. However, an important point to note is that each variety $latex S_i$ is dependent on the choice of point in the previous variety $latex S_{i+1}$. A visual representation of this idea is in the following figure.</p>
ENTER FIGURE HERE
<p style="font-size:15px;">It would be interesting to study these sheaves, and furthermore investigate the moduli spaces of these sheaves. The moduli space is obtained by identifying equivalent sheaves. Recall that sheaves are functors from the category $latex \textsf{Cell}(X)$ into the category $latex \textsf{Vect}$. Thus, two sheaves $latex F$ and $latex G$ are equivalent if and only if there exists a natural isomorphism $latex \alpha$ between $latex F$ and $latex G$. Recasting this in terms of the construction presented in this post, two sheaves $latex F$ and $latex G$ over a fixed Liorian $latex X$ are equivalent if there exist changes of bases for the vector spaces over each cell such that all maps are equal.</p>
<p style="font-size:15px;">Explicitly, consider two sheaves over our example Liorian, where we denote the maps $latex \phi_{i,j}$ and $latex \psi_{i,j}$. Two sheaves are equivalent if there exists a set of invertible matrices $latex \{M_k\}$ (one map for each cell) such that</p>
<p align=center> $latex \psi_{i,j} = M_i \circ \phi_{i,j}\circ M^{-1}_j.$</p>
<p style="font-size:15px;">We note that changing bases still preserves all commutativity relations. For example, consider the two maps from $latex a$ into $latex T$. When we look at the maps with a change of basis, we get</p>
<p align=center> $latex (M_a \phi_{a,z} M^{-1}_z) \circ (M_z \phi_{z,T} M^{-1}_T) = M_a \phi_{a,z} \phi_{z,T} M_T^{-1}$</p>
<p align=center> $latex (M_a \phi_{a,y} M^{-1}_y) \circ (M_y \phi_{y,T} M_T^{-1}) = M_a \phi_{a,y} \phi_{yT} M_T^{-1}$</p>
<p style="font-size:15px;">which is equal since $latex \phi_{a,z} \phi_{z,T} = \phi_{a,y} \phi_{yT}$.</p>
<p style="font-size:18px;"> <strong>2.2   Consolidated Approach and Approximate Sheaves</strong></p>
<p style="font-size:15px;">Finally, we will consider the consolidated approach. Instead of looking at this procedure iteratively, we can look at all of the matrices for all of the unknown maps at once. The set of all such matrices would be in $latex k^N$ (where $latex N$ is the number of variables required to define all maps), and we would get a large collection of polynomials $latex \mathcal{P}$, which would form a variety $latex S = V(\mathcal{P})$. Here the polynomials will not be linear, but they will be quadratic instead. This is because every commutativity relation will be in the form of an equation such as $latex \phi_{z,T} \circ \phi_{a,z} - \phi_{y,T} \circ \phi_{a,y}  = 0$. If each $latex \phi$ is a matrix of variables, then this matrix equation will give a set of quadratic equations for each element of the matrix. We can ask similar questions here about the variety and moduli space of sheaves and investigate their properties.</p>
<p style="font-size:15px;">The final idea is that of an approximate sheaf. When we obtain sheaves in real life, it is highly unlikely that all of the maps will commute properly, but it may be ``close'' to being a sheaf. Is there a way to put a metric on the space $latex k^N$ and ask what is the closest sheaf to the approximate sheaf?</p>
ENTER FIGURE HERE
